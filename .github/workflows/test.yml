# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Discord Bot CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Install Dependencies
      run: yarn --frozen-lockfile
    - name: Build
      run: yarn build
    - name: Run Tests
      run: yarn test
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: create config json
      uses: jsdaniell/create-json@1.1.2
        with:
          name: "production.json"
          dir: "config/"
          json: ${{ secrets.CONFIG }}
    - name: copy config to prod
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "config/production.json"
        target: "${{ secrets.DIR }}/config/"
    - name: pull latest and start
      uses: appleboy/ssh-action@v0.1.9
      with: 
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        # using pm2 to keep app alive forever, source nvm may be needed to ssh in and use pm2
        script: |
          cd ${{ secrets.DIR }}
          git checkout main
          git pull
          source ~/.nvm/nvm.sh && yarn build
          source ~/.nvm/nvm.sh && pm2 restart all